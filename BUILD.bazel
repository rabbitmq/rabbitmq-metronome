load(
    "@rabbitmq-server//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "RABBITMQ_TEST_ERLC_OPTS",
    "rabbitmq_app",
)
load("@rabbitmq-server//:rabbitmq_home.bzl", "rabbitmq_home")
load("@rabbitmq-server//:rabbitmq_run.bzl", "rabbitmq_run", "rabbitmq_run_command")
load("@rabbitmq-server//:rabbitmqctl.bzl", "rabbitmqctl")
load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load("@rules_erlang//:ct.bzl", "assert_suites", "ct_suite")
load("@rules_erlang//:shell.bzl", "shell")

APP_ENV = """[
	    {exchange, <<"metronome">>}
	  ]"""

DEPS = [
    "@rabbitmq-server//deps/rabbit_common:erlang_app",
    "@rabbitmq-server//deps/amqp_client:erlang_app",
]

RUNTIME_DEPS = [
    "@rabbitmq-server//deps/rabbit:erlang_app",
]

config_setting(
    name = "debug_build",
    values = {
        "compilation_mode": "dbg",
    },
)

rabbitmq_app(
    app_description = "Embedded Rabbit Metronome",
    app_env = APP_ENV,
    app_module = "rabbit_metronome",
    app_name = "rabbitmq_metronome",
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

xref()

plt(
    name = "base_plt",
    deps = DEPS + RUNTIME_DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
)

rabbitmq_home(
    name = "broker-home",
    plugins = [
        "@rabbitmq-server//deps/rabbit:erlang_app",
        ":erlang_app",
    ],
)

rabbitmq_run(
    name = "rabbitmq-run",
    home = ":broker-home",
)

rabbitmq_run_command(
    name = "broker",
    rabbitmq_run = ":rabbitmq-run",
    subcommand = "run-broker",
)

rabbitmqctl(
    name = "rabbitmqctl",
    home = ":broker-home",
)

suites = [
    ct_suite(
        name = "metronome_SUITE",
        erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
        test_env = {
            "RABBITMQ_CT_SKIP_AS_ERROR": "true",
            "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/rabbitmq-run",
            "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/broker-home/sbin/rabbitmqctl",
            "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/broker-home/sbin/rabbitmq-plugins",
        },
        tools = [
            ":rabbitmq-run",
        ],
        runtime_deps = [
            "@rabbitmq-server//bazel/elixir:erlang_app",
            "@rabbitmq-server//deps/rabbitmq_cli:rabbitmqctl",
            "@rabbitmq-server//deps/rabbitmq_ct_client_helpers:erlang_app",
            "@rabbitmq-server//deps/rabbitmq_ct_helpers:erlang_app",
        ],
        deps = [
            "@rabbitmq-server//deps/amqp_client:erlang_app",
            "@rabbitmq-server//deps/rabbit_common:erlang_app",
        ],
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)

shell(
    name = "repl",
    deps = [
        ":erlang_app",
    ],
)
